#include <bobnet_gridmap/GridmapInterface.h>

namespace bobnet_gridmap {

/**********************************************************************************************************************/
/**********************************************************************************************************************/
/**********************************************************************************************************************/
GridmapInterface::GridmapInterface(ros::NodeHandle &nh, const std::string &topic) : initialized_(false) {
    subscriber_ = nh.subscribe(topic, 1, &GridmapInterface::callback, this);
}

/**********************************************************************************************************************/
/**********************************************************************************************************************/
/**********************************************************************************************************************/
vs GridmapInterface::atPositions(vs &xs, vs &ys, scalar_t offset_x, scalar_t offset_y) {
    vs zs(xs.size());
    for (size_t i = 0; i < xs.size(); ++i) {
        zs[i] = atPosition(xs[i] + offset_x, ys[i] + offset_y);
    }
    return zs;
}

/**********************************************************************************************************************/
/**********************************************************************************************************************/
/**********************************************************************************************************************/
void GridmapInterface::callback(const grid_map_msgs::GridMap &msg) {
    grid_map::GridMapRosConverter::fromMessage(msg, map_);
    initialized_ = true;
}

/**********************************************************************************************************************/
/**********************************************************************************************************************/
/**********************************************************************************************************************/
void GridmapInterface::waitTillInitialized() {
    while (!initialized_) {
        ROS_INFO("[Bobnet gridmap] Waiting for gridmap to be initialized.");
        ros::Duration(0.5).sleep();
        ros::spinOnce();
    }
}

}  // namespace bobnet_gridmap